@using GDSHelpers
@using Microsoft.AspNetCore.Http
@model GDSHelpers.Models.FormSchema.PageVM

@{
    Layout = "_LayoutForm";
}

@if (string.IsNullOrWhiteSpace(Model.PreviousPageId))
{
    <gds-back-link link-text="Back" url="#" onclick="history.go(-1);return false;"></gds-back-link>
}
else
{
    <gds-back-link link-text="Back" url="/Form/Index/@Model.PreviousPageId"></gds-back-link>
}
<gds-row>

    <gds-column desktop-size="TwoThirds" tablet-size="FullWidth">

        <form asp-action="Index" asp-controller="Form" method="post">

            @Html.HiddenFor(m => m.PageId)
            @Html.AntiForgeryToken()

            @if (Model.Questions != null)
            {
                foreach (var question in Model.Questions)
                {
                    @Html.GdsQuestion(question)
                }
            }

            @if (Model.Buttons != null)
            {
                foreach (var button in Model.Buttons)
                {
                    @Html.GdsButton(button.ButtonType, button.ButtonText)
                }
            }

            <script>

                jQuery("[data-showwhen-questionid]").each(function (s, e) {

                    var $this = jQuery(this);
                    $this.hide();

                    var questionToCheck = $this.data("showwhen-questionid");
                    var valToCheck = $this.data("showwhen-value").toString();

                    jQuery("[name=" + questionToCheck + "]").on("change", function () {
                        var answer = jQuery(this).val();
                        showWhen($this, answer, valToCheck);
                    });

                });

                function showWhen($this, answer, valToCheck) {
                    if (valToCheck !== "" && answer === valToCheck) {
                        $this.show();
                    } else {
                        $this.hide();
                    }
                }

            </script>

        </form>

    </gds-column>

</gds-row>